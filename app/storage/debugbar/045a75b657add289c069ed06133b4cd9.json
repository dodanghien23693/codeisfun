{"__meta":{"id":"045a75b657add289c069ed06133b4cd9","datetime":"2015-01-04 11:47:56","utime":1420346876.1904,"method":"POST","uri":"\/admin\/post","ip":"192.168.10.1"},"php":{"version":"5.6.0-1+deb.sury.org~trusty+1"},"messages":{"count":0,"messages":[]},"time":{"start":1420346874.8964,"end":1420346876.1905,"duration":1.294126033783,"duration_str":"1.29s","measures":[{"label":"Booting","start":1420346874.8964,"relative_start":0,"end":1420346875.8996,"relative_end":1420346875.8996,"duration":1.0032391548157,"duration_str":"1s","params":[],"collector":null},{"label":"Application","start":1420346875.935,"relative_start":1.0386011600494,"end":1420346876.1832,"relative_end":1420346876.1832,"duration":0.24820184707642,"duration_str":"248.2ms","params":[],"collector":null},{"label":"After application","start":1420346876.1832,"relative_start":1.2868371009827,"end":1420346876.1905,"relative_end":5.9604644775391e-6,"duration":0.0072948932647705,"duration_str":"7.29ms","params":[],"collector":null}]},"memory":{"peak_usage":5505024,"peak_usage_str":"5.25MB"},"exceptions":{"count":0,"exceptions":[]},"views":{"nb_templates":0,"templates":[]},"route":{"host":"-","uri":"POST admin\/post","name":"admin.post.store","action":"PostController@store","before":"auth","after":"-"},"queries":{"nb_statements":8,"nb_failed_statements":0,"accumulated_duration":0.0071,"accumulated_duration_str":"7.1ms","statements":[{"sql":"select * from `users` where `users`.`id` = '3' limit 1","params":{"0":"3","hints":"Use <code>SELECT *<\/code> only if you need all columns from table<br \/><code>LIMIT<\/code> without <code>ORDER BY<\/code> causes non-deterministic results, depending on the query execution plan"},"duration":0.00046,"duration_str":"460\u03bcs","stmt_id":null},{"sql":"select count(*) as aggregate from `posts` where `slug` = 'Using-Blade-in-Laravel-4'","params":{"0":"Using-Blade-in-Laravel-4"},"duration":0.00041,"duration_str":"410\u03bcs","stmt_id":null},{"sql":"insert into `posts` (`user_id`, `title`, `slug`, `description`, `content`, `updated_at`, `created_at`) values ('3', 'Using Blade in Laravel 4', 'Using-Blade-in-Laravel-4', 'When you think of Views in the Model-View-Controller pattern, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.', '<div class=\\\"post\\\">\\r\\n<p><img src=\\\"http:\/\/culttt.com\/wp-content\/uploads\/2013\/08\/Using-Blade-in-Laravel-4.jpg\\\" alt=\\\"Using Blade in Laravel 4\\\" \/><br \/> When you think of Views in the <a href=\\\"http:\/\/culttt.com\/2012\/11\/19\/what-is-mvc-model-view-controller\/\\\">Model-View-Controller pattern<\/a>, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.<\/p>\\r\\n<p>Despite the best of intentions, there is usually at least some logic code that will be required to be placed in the View. What&rsquo;s more, we usually also have to stitch our Views together using partials, and so we need to be able to include other files or extend a particular view without having to create an entirely new set of files.<\/p>\\r\\n<p>View template engines have become popular over the last couple of years and have been adopted by a wide array of languages and frameworks. Laravel ships with the Blade template engine, but you are of course free to switch it out for your desired tempting engine from the PHP community.<\/p>\\r\\n<p>In this tutorial I&rsquo;m going to introduce template engines, show you what Blade is capable of and show you how easy it is to switch to a different tempting engine if you so wish.<\/p>\\r\\n<h2>Why use a template engine'2015-01-04 11:47:56'<\/h2>\\r\\n<p>So why would you want to use a template engine in the first place'2015-01-04 11:47:56' If you are new to template engines, you might be thinking, what advantage could it possibly give you over raw PHP?<\/p>\\r\\n<p>Well the honest answer is not a lot really. Template engines are fantastic for reducing or simplifying the code that you write in your View.<\/p>\\r\\n<p>So instead of this:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_386027\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">&lt;ul&gt;<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;?php <\/code><code class=\\\"php keyword\\\">foreach<\/code> <code class=\\\"php variable\\\">$users<\/code> <code class=\\\"php keyword\\\">as<\/code> <code class=\\\"php variable\\\">$user<\/code> <code class=\\\"php plain\\\">: ?&gt;<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;li&gt;&lt;?php <\/code><code class=\\\"php functions\\\">echo<\/code> <code class=\\\"php variable\\\">$user<\/code><code class=\\\"php plain\\\">-&gt;name; ?&gt;&lt;\/li&gt;<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;?php <\/code><code class=\\\"php keyword\\\">endforeach<\/code><code class=\\\"php plain\\\">; ?&gt;<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"php plain\\\">&lt;\/ul&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>You can simply write:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_901419\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">&lt;ul&gt;<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">foreach<\/code> <code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$users<\/code> <code class=\\\"php keyword\\\">as<\/code> <code class=\\\"php variable\\\">$user<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;li&gt;{{ <\/code><code class=\\\"php variable\\\">$user<\/code><code class=\\\"php plain\\\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">endforeach<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"php plain\\\">&lt;\/ul&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>As you can see, this is a much cleaner syntax.<\/p>\\r\\n<p>However, this does raise a couple of valid concerns.<\/p>\\r\\n<p>Firstly it will require you to learn a new syntax for each template engine you wish to use. This is usually a hybrid of PHP and HTML.<\/p>\\r\\n<p>Secondly, support for syntax highlighting in your text editor of choice might be patchy which is only going to make things harder for you.<\/p>\\r\\n<p>And thirdly, using a template engine will add weight to your codebase as it must be converted into real code using the engine. Whilst this might only be a concern in certain circumstances, it is still something to think about.<\/p>\\r\\n<p>Template engines aren&rsquo;t a magic solution for separating your logic from your views. If you are questioning whether certain logic should be in the view, it&rsquo;s probably a sign that it shouldn&rsquo;t.<\/p>\\r\\n<p>With all that said, I still prefer to use tempting engines because PHP is ugly and it looks disgusting in HTML.<\/p>\\r\\n<p>So let&rsquo;s look at Blade!<\/p>\\r\\n<h2>Blade<\/h2>\\r\\n<p>The Blade engine basically allows you to do six things:<\/p>\\r\\n<ol>\\r\\n<li>Define sections<\/li>\\r\\n<li>Extend views<\/li>\\r\\n<li>Echo and escaping<\/li>\\r\\n<li>Ifs<\/li>\\r\\n<li>Loops<\/li>\\r\\n<li>Includes<\/li>\\r\\n<\/ol>\\r\\n<h2>Define sections<\/h2>\\r\\n<p>The first thing you are going to want to do is to create a layout file. This file contains your header and footer code and also your defined areas such <em>content<\/em> or <em>sidebar<\/em>.<\/p>\\r\\n<p>So create a file under <code>app\/views\/layouts<\/code> called <code>master.blade.php<\/code> and copy the following:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_626713\\\" class=\\\"syntaxhighlighter  xml\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\">6<\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\">7<\/div>\\r\\n<div class=\\\"line number8 index7 alt1\\\">8<\/div>\\r\\n<div class=\\\"line number9 index8 alt2\\\">9<\/div>\\r\\n<div class=\\\"line number10 index9 alt1\\\">10<\/div>\\r\\n<div class=\\\"line number11 index10 alt2\\\">11<\/div>\\r\\n<div class=\\\"line number12 index11 alt1\\\">12<\/div>\\r\\n<div class=\\\"line number13 index12 alt2\\\">13<\/div>\\r\\n<div class=\\\"line number14 index13 alt1\\\">14<\/div>\\r\\n<div class=\\\"line number15 index14 alt2\\\">15<\/div>\\r\\n<div class=\\\"line number16 index15 alt1\\\">16<\/div>\\r\\n<div class=\\\"line number17 index16 alt2\\\">17<\/div>\\r\\n<div class=\\\"line number18 index17 alt1\\\">18<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">html<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">body<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">nav<\/code> <code class=\\\"xml color1\\\">class<\/code><code class=\\\"xml plain\\\">=<\/code><code class=\\\"xml string\\\">\\\"navigation\\\"<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">@section(\\'navigation\\')<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">a<\/code> <code class=\\\"xml color1\\\">href<\/code><code class=\\\"xml plain\\\">=<\/code><code class=\\\"xml string\\\">\\\"\/\\\"<\/code><code class=\\\"xml plain\\\">&gt;Home&lt;\/<\/code><code class=\\\"xml keyword\\\">a<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">a<\/code> <code class=\\\"xml color1\\\">href<\/code><code class=\\\"xml plain\\\">=<\/code><code class=\\\"xml string\\\">\\\"\/about\\\"<\/code><code class=\\\"xml plain\\\">&gt;About&lt;\/<\/code><code class=\\\"xml keyword\\\">a<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">@show<\/code><\/div>\\r\\n<div class=\\\"line number8 index7 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;\/<\/code><code class=\\\"xml keyword\\\">nav<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number9 index8 alt2\\\">&nbsp;<\/div>\\r\\n<div class=\\\"line number10 index9 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">div<\/code> <code class=\\\"xml color1\\\">class<\/code><code class=\\\"xml plain\\\">=<\/code><code class=\\\"xml string\\\">\\\"container\\\"<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number11 index10 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">@yield(\\'content\\')<\/code><\/div>\\r\\n<div class=\\\"line number12 index11 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;\/<\/code><code class=\\\"xml keyword\\\">div<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number13 index12 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code>&nbsp;<\/div>\\r\\n<div class=\\\"line number14 index13 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;<\/code><code class=\\\"xml keyword\\\">div<\/code> <code class=\\\"xml color1\\\">class<\/code><code class=\\\"xml plain\\\">=<\/code><code class=\\\"xml string\\\">\\\"sidebar\\\"<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number15 index14 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">@yield(\\'sidebar\\')<\/code><\/div>\\r\\n<div class=\\\"line number16 index15 alt1\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;\/<\/code><code class=\\\"xml keyword\\\">div<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number17 index16 alt2\\\"><code class=\\\"xml spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"xml plain\\\">&lt;\/<\/code><code class=\\\"xml keyword\\\">body<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<div class=\\\"line number18 index17 alt1\\\"><code class=\\\"xml plain\\\">&lt;\/<\/code><code class=\\\"xml keyword\\\">html<\/code><code class=\\\"xml plain\\\">&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>This template has basically two different type of sections. First is the navigation section which contains the main links that will be on each page. If we needed to overwrite the navigation with page specific links, we could do that very easily with Blade.<\/p>\\r\\n<p>Second we have areas where we yield the content from a partial. So the content would appear in the content section and the sidebar would appear in the sidebar section.<\/p>\\r\\n<h2>Extend views<\/h2>\\r\\n<p>To extend a View you simply have to define that this is an extension and then overwrite or append to the sections that you have defined:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_104603\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\">6<\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\">7<\/div>\\r\\n<div class=\\\"line number8 index7 alt1\\\">8<\/div>\\r\\n<div class=\\\"line number9 index8 alt2\\\">9<\/div>\\r\\n<div class=\\\"line number10 index9 alt1\\\">10<\/div>\\r\\n<div class=\\\"line number11 index10 alt2\\\">11<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">extends<\/code><code class=\\\"php plain\\\">(<\/code><code class=\\\"php string\\\">\\'layouts.master\\'<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">&nbsp;<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@section(<\/code><code class=\\\"php string\\\">\\'content\\'<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;p&gt;This will be overwritten&lt;\/p&gt;<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"php plain\\\">@stop<\/code><\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\">&nbsp;<\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\"><code class=\\\"php plain\\\">@section(<\/code><code class=\\\"php string\\\">\\'sidebar\\'<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<div class=\\\"line number8 index7 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">@parent<\/code><\/div>\\r\\n<div class=\\\"line number9 index8 alt2\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code>&nbsp;<\/div>\\r\\n<div class=\\\"line number10 index9 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;a href=<\/code><code class=\\\"php string\\\">\\\"#\\\"<\/code><code class=\\\"php plain\\\">&gt;Section specific links&lt;\/a&gt;<\/code><\/div>\\r\\n<div class=\\\"line number11 index10 alt2\\\"><code class=\\\"php plain\\\">@stop<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<h2>Echo and escaping<\/h2>\\r\\n<p>One of my favourite features of template engines is that it allows you to very easily echo or escape variables into your views.<\/p>\\r\\n<p>So instead of writing:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_512263\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">&lt;h1&gt;Hello &lt;?php <\/code><code class=\\\"php functions\\\">echo<\/code> <code class=\\\"php variable\\\">$name<\/code><code class=\\\"php plain\\\">; ?&gt;!&lt;\/h1&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>You can simply write:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_424724\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">&lt;h1&gt;Hello {{ <\/code><code class=\\\"php variable\\\">$name<\/code> <code class=\\\"php plain\\\">}}&lt;\/h1&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>Whenever you are printing content that has been inputted by a user you should always escape it to prevent malicious injection. You can do this very easily in Laravel by simply using 3 curly brackets:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_925934\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">&lt;p&gt;{{{ <\/code><code class=\\\"php variable\\\">$user_input<\/code> <code class=\\\"php plain\\\">}}}&lt;\/p&gt;<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<h2>Ifs<\/h2>\\r\\n<p>At some point in your application, you are more than likely going to have to include some logic If statements. This is unfortunate, but it can be made cleaner by using Blade&rsquo;s syntax:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_707431\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\">6<\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\">7<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">if<\/code> <code class=\\\"php plain\\\">(<\/code><code class=\\\"php functions\\\">count<\/code><code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$friends<\/code><code class=\\\"php plain\\\">) === 1)<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">You have one friend<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">elseif<\/code> <code class=\\\"php plain\\\">(<\/code><code class=\\\"php functions\\\">count<\/code><code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$friends<\/code><code class=\\\"php plain\\\">) &gt; 1)<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">You have {{ <\/code><code class=\\\"php functions\\\">count<\/code><code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$friends<\/code><code class=\\\"php plain\\\">) }} friends<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">else<\/code><\/div>\\r\\n<div class=\\\"line number6 index5 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">You don\\'t have any friends<\/code><\/div>\\r\\n<div class=\\\"line number7 index6 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">endif<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>Another useful bit of Blade logic is the unless block:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_89629\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@unless (Auth::check())<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">You are not signed in.<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@endunless<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>In this example I&rsquo;m simply checking to see if the user is logged in.<\/p>\\r\\n<h2>Loops<\/h2>\\r\\n<p>Loops are another common bit of logic that you might be required to implement in your view. This is usually the case when you need to iterate through an array of results to display each one:<\/p>\\r\\n<p>For:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_729738\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">for<\/code> <code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$i<\/code> <code class=\\\"php plain\\\">= 1; <\/code><code class=\\\"php variable\\\">$i<\/code> <code class=\\\"php plain\\\">&lt; 100; <\/code><code class=\\\"php variable\\\">$i<\/code><code class=\\\"php plain\\\">++)<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;li&gt;{{ <\/code><code class=\\\"php variable\\\">$i<\/code> <code class=\\\"php plain\\\">}} ... &lt;\/li&gt;<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">endfor<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>Foreach:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_496914\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">foreach<\/code> <code class=\\\"php plain\\\">(<\/code><code class=\\\"php variable\\\">$users<\/code> <code class=\\\"php keyword\\\">as<\/code> <code class=\\\"php variable\\\">$user<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;li&gt;This is user {{ <\/code><code class=\\\"php variable\\\">$user<\/code><code class=\\\"php plain\\\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">endforeach<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>While:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_102219\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">while<\/code> <code class=\\\"php plain\\\">(true)<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"php spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"php plain\\\">&lt;p&gt;I have no good reason to <\/code><code class=\\\"php keyword\\\">use<\/code> <code class=\\\"php plain\\\">this.&lt;\/p&gt;<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">endwhile<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<h2>Includes<\/h2>\\r\\n<p>Finally, to include views in other views you can simply use the include tag:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_979551\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php plain\\\">@<\/code><code class=\\\"php keyword\\\">include<\/code><code class=\\\"php plain\\\">(<\/code><code class=\\\"php string\\\">\\'view.name\\'<\/code><code class=\\\"php plain\\\">)<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>This is useful if you want to use partials. So for example, you could save your navigation into a partial and simply include it into the template whenever you needed it.<\/p>\\r\\n<h2>Using other engines<\/h2>\\r\\n<p>Another popular template engine is <a href=\\\"http:\/\/twig.sensiolabs.org\/\\\">Twig<\/a>. Using <a href=\\\"https:\/\/github.com\/rcrowe\/TwigBridge\\\">this<\/a> Github repo, we can very easily install Twig through Composer.<\/p>\\r\\n<p>To install Twig, add the following to your <code>composer.json<\/code> file:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_125712\\\" class=\\\"syntaxhighlighter  jscript\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\">2<\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\">3<\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\">4<\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\">5<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"jscript plain\\\">{<\/code><\/div>\\r\\n<div class=\\\"line number2 index1 alt1\\\"><code class=\\\"jscript spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"jscript string\\\">\\\"require\\\"<\/code><code class=\\\"jscript plain\\\">: {<\/code><\/div>\\r\\n<div class=\\\"line number3 index2 alt2\\\"><code class=\\\"jscript spaces\\\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\\\"jscript string\\\">\\\"rcrowe\/twigbridge\\\"<\/code><code class=\\\"jscript plain\\\">: <\/code><code class=\\\"jscript string\\\">\\\"0.4.*\\\"<\/code><\/div>\\r\\n<div class=\\\"line number4 index3 alt1\\\"><code class=\\\"jscript spaces\\\">&nbsp;&nbsp;<\/code><code class=\\\"jscript plain\\\">}<\/code><\/div>\\r\\n<div class=\\\"line number5 index4 alt2\\\"><code class=\\\"jscript plain\\\">}<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>Next add the following to your providers array in <code>app\/config\/app.php<\/code>:<\/p>\\r\\n<div>\\r\\n<div id=\\\"highlighter_224026\\\" class=\\\"syntaxhighlighter  php\\\">\\r\\n<div class=\\\"toolbar\\\"><a class=\\\"toolbar_item command_help help\\\" href=\\\"#\\\">?<\/a><\/div>\\r\\n<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\">\\r\\n<tbody>\\r\\n<tr>\\r\\n<td class=\\\"gutter\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\">1<\/div>\\r\\n<\/td>\\r\\n<td class=\\\"code\\\">\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"line number1 index0 alt2\\\"><code class=\\\"php string\\\">\\'TwigBridge\\TwigServiceProvider\\'<\/code><\/div>\\r\\n<\/div>\\r\\n<\/td>\\r\\n<\/tr>\\r\\n<\/tbody>\\r\\n<\/table>\\r\\n<\/div>\\r\\n<\/div>\\r\\n<p>Now you have full access to the fantastic Twig template engine!<\/p>\\r\\n<h2>Conclusion<\/h2>\\r\\n<p>Whilst using a template engine won&rsquo;t solve all of your View logic problems, it will make any logic that you are required to include in your views a lot cleaner. Template engines also allow you to easily create layouts, extend them and include partials to prevent you repeating the same HTML in multiple files.<\/p>\\r\\n<p>Overall I think template engines are really good and definitely worth the little bit of extra time it will take to learn the syntax of a new one. If you happen to be working with a front end coder who isn&rsquo;t comfortable using PHP, the syntax is usually a lot easier to pick up.<\/p>\\r\\n<p>This has been a brief overview of using Blade in Laravel 4 and a quick introduction to each of the elements. However, to really see them in action, keep following a long with this series as I get into building the front end of Cribbb!<\/p>\\r\\n<p>This is a series of posts on building an entire Open Source application called <a href=\\\"http:\/\/cribbb.com\\\">Cribbb<\/a>. All of the tutorials will be free to web, and all of the code is available on <a href=\\\"https:\/\/github.com\/cribbb\/cribbb\\\">GitHub<\/a>.<\/p>\\r\\n<p>To view a full listing of the tutorials in this series, <a href=\\\"http:\/\/culttt.com\/tag\/cribbb\/\\\">click here<\/a>.<\/p>\\r\\n<\/div>', ?, ?)","params":{"0":"3","1":"Using Blade in Laravel 4","2":"Using-Blade-in-Laravel-4","3":"When you think of Views in the Model-View-Controller pattern, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.","4":"&lt;div class=&quot;post&quot;&gt;\r\n&lt;p&gt;&lt;img src=&quot;http:\/\/culttt.com\/wp-content\/uploads\/2013\/08\/Using-Blade-in-Laravel-4.jpg&quot; alt=&quot;Using Blade in Laravel 4&quot; \/&gt;&lt;br \/&gt; When you think of Views in the &lt;a href=&quot;http:\/\/culttt.com\/2012\/11\/19\/what-is-mvc-model-view-controller\/&quot;&gt;Model-View-Controller pattern&lt;\/a&gt;, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.&lt;\/p&gt;\r\n&lt;p&gt;Despite the best of intentions, there is usually at least some logic code that will be required to be placed in the View. What&rsquo;s more, we usually also have to stitch our Views together using partials, and so we need to be able to include other files or extend a particular view without having to create an entirely new set of files.&lt;\/p&gt;\r\n&lt;p&gt;View template engines have become popular over the last couple of years and have been adopted by a wide array of languages and frameworks. Laravel ships with the Blade template engine, but you are of course free to switch it out for your desired tempting engine from the PHP community.&lt;\/p&gt;\r\n&lt;p&gt;In this tutorial I&rsquo;m going to introduce template engines, show you what Blade is capable of and show you how easy it is to switch to a different tempting engine if you so wish.&lt;\/p&gt;\r\n&lt;h2&gt;Why use a template engine?&lt;\/h2&gt;\r\n&lt;p&gt;So why would you want to use a template engine in the first place? If you are new to template engines, you might be thinking, what advantage could it possibly give you over raw PHP?&lt;\/p&gt;\r\n&lt;p&gt;Well the honest answer is not a lot really. Template engines are fantastic for reducing or simplifying the code that you write in your View.&lt;\/p&gt;\r\n&lt;p&gt;So instead of this:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_386027&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;ul&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;?php &lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;foreach&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$users&lt;\/code&gt; &lt;code class=&quot;php keyword&quot;&gt;as&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;: ?&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;li&gt;&lt;?php &lt;\/code&gt;&lt;code class=&quot;php functions&quot;&gt;echo&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;-&gt;name; ?&gt;&lt;\/li&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;?php &lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endforeach&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;; ?&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;\/ul&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;You can simply write:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_901419&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;ul&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;foreach&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$users&lt;\/code&gt; &lt;code class=&quot;php keyword&quot;&gt;as&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;li&gt;{{ &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;-&gt;name }}&lt;\/li&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endforeach&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;\/ul&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;As you can see, this is a much cleaner syntax.&lt;\/p&gt;\r\n&lt;p&gt;However, this does raise a couple of valid concerns.&lt;\/p&gt;\r\n&lt;p&gt;Firstly it will require you to learn a new syntax for each template engine you wish to use. This is usually a hybrid of PHP and HTML.&lt;\/p&gt;\r\n&lt;p&gt;Secondly, support for syntax highlighting in your text editor of choice might be patchy which is only going to make things harder for you.&lt;\/p&gt;\r\n&lt;p&gt;And thirdly, using a template engine will add weight to your codebase as it must be converted into real code using the engine. Whilst this might only be a concern in certain circumstances, it is still something to think about.&lt;\/p&gt;\r\n&lt;p&gt;Template engines aren&rsquo;t a magic solution for separating your logic from your views. If you are questioning whether certain logic should be in the view, it&rsquo;s probably a sign that it shouldn&rsquo;t.&lt;\/p&gt;\r\n&lt;p&gt;With all that said, I still prefer to use tempting engines because PHP is ugly and it looks disgusting in HTML.&lt;\/p&gt;\r\n&lt;p&gt;So let&rsquo;s look at Blade!&lt;\/p&gt;\r\n&lt;h2&gt;Blade&lt;\/h2&gt;\r\n&lt;p&gt;The Blade engine basically allows you to do six things:&lt;\/p&gt;\r\n&lt;ol&gt;\r\n&lt;li&gt;Define sections&lt;\/li&gt;\r\n&lt;li&gt;Extend views&lt;\/li&gt;\r\n&lt;li&gt;Echo and escaping&lt;\/li&gt;\r\n&lt;li&gt;Ifs&lt;\/li&gt;\r\n&lt;li&gt;Loops&lt;\/li&gt;\r\n&lt;li&gt;Includes&lt;\/li&gt;\r\n&lt;\/ol&gt;\r\n&lt;h2&gt;Define sections&lt;\/h2&gt;\r\n&lt;p&gt;The first thing you are going to want to do is to create a layout file. This file contains your header and footer code and also your defined areas such &lt;em&gt;content&lt;\/em&gt; or &lt;em&gt;sidebar&lt;\/em&gt;.&lt;\/p&gt;\r\n&lt;p&gt;So create a file under &lt;code&gt;app\/views\/layouts&lt;\/code&gt; called &lt;code&gt;master.blade.php&lt;\/code&gt; and copy the following:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_626713&quot; class=&quot;syntaxhighlighter  xml&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;6&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;7&lt;\/div&gt;\r\n&lt;div class=&quot;line number8 index7 alt1&quot;&gt;8&lt;\/div&gt;\r\n&lt;div class=&quot;line number9 index8 alt2&quot;&gt;9&lt;\/div&gt;\r\n&lt;div class=&quot;line number10 index9 alt1&quot;&gt;10&lt;\/div&gt;\r\n&lt;div class=&quot;line number11 index10 alt2&quot;&gt;11&lt;\/div&gt;\r\n&lt;div class=&quot;line number12 index11 alt1&quot;&gt;12&lt;\/div&gt;\r\n&lt;div class=&quot;line number13 index12 alt2&quot;&gt;13&lt;\/div&gt;\r\n&lt;div class=&quot;line number14 index13 alt1&quot;&gt;14&lt;\/div&gt;\r\n&lt;div class=&quot;line number15 index14 alt2&quot;&gt;15&lt;\/div&gt;\r\n&lt;div class=&quot;line number16 index15 alt1&quot;&gt;16&lt;\/div&gt;\r\n&lt;div class=&quot;line number17 index16 alt2&quot;&gt;17&lt;\/div&gt;\r\n&lt;div class=&quot;line number18 index17 alt1&quot;&gt;18&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;html&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;body&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;nav&lt;\/code&gt; &lt;code class=&quot;xml color1&quot;&gt;class&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;=&lt;\/code&gt;&lt;code class=&quot;xml string&quot;&gt;&quot;navigation&quot;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;@section(&#039;navigation&#039;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;a&lt;\/code&gt; &lt;code class=&quot;xml color1&quot;&gt;href&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;=&lt;\/code&gt;&lt;code class=&quot;xml string&quot;&gt;&quot;\/&quot;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;Home&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;a&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;a&lt;\/code&gt; &lt;code class=&quot;xml color1&quot;&gt;href&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;=&lt;\/code&gt;&lt;code class=&quot;xml string&quot;&gt;&quot;\/about&quot;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;About&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;a&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;@show&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number8 index7 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;nav&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number9 index8 alt2&quot;&gt;&nbsp;&lt;\/div&gt;\r\n&lt;div class=&quot;line number10 index9 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;div&lt;\/code&gt; &lt;code class=&quot;xml color1&quot;&gt;class&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;=&lt;\/code&gt;&lt;code class=&quot;xml string&quot;&gt;&quot;container&quot;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number11 index10 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;@yield(&#039;content&#039;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number12 index11 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;div&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number13 index12 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&nbsp;&lt;\/div&gt;\r\n&lt;div class=&quot;line number14 index13 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;div&lt;\/code&gt; &lt;code class=&quot;xml color1&quot;&gt;class&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;=&lt;\/code&gt;&lt;code class=&quot;xml string&quot;&gt;&quot;sidebar&quot;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number15 index14 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;@yield(&#039;sidebar&#039;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number16 index15 alt1&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;div&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number17 index16 alt2&quot;&gt;&lt;code class=&quot;xml spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;body&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number18 index17 alt1&quot;&gt;&lt;code class=&quot;xml plain&quot;&gt;&lt;\/&lt;\/code&gt;&lt;code class=&quot;xml keyword&quot;&gt;html&lt;\/code&gt;&lt;code class=&quot;xml plain&quot;&gt;&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;This template has basically two different type of sections. First is the navigation section which contains the main links that will be on each page. If we needed to overwrite the navigation with page specific links, we could do that very easily with Blade.&lt;\/p&gt;\r\n&lt;p&gt;Second we have areas where we yield the content from a partial. So the content would appear in the content section and the sidebar would appear in the sidebar section.&lt;\/p&gt;\r\n&lt;h2&gt;Extend views&lt;\/h2&gt;\r\n&lt;p&gt;To extend a View you simply have to define that this is an extension and then overwrite or append to the sections that you have defined:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_104603&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;6&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;7&lt;\/div&gt;\r\n&lt;div class=&quot;line number8 index7 alt1&quot;&gt;8&lt;\/div&gt;\r\n&lt;div class=&quot;line number9 index8 alt2&quot;&gt;9&lt;\/div&gt;\r\n&lt;div class=&quot;line number10 index9 alt1&quot;&gt;10&lt;\/div&gt;\r\n&lt;div class=&quot;line number11 index10 alt2&quot;&gt;11&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;extends&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php string&quot;&gt;&#039;layouts.master&#039;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&nbsp;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@section(&lt;\/code&gt;&lt;code class=&quot;php string&quot;&gt;&#039;content&#039;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;p&gt;This will be overwritten&lt;\/p&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@stop&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;&nbsp;&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@section(&lt;\/code&gt;&lt;code class=&quot;php string&quot;&gt;&#039;sidebar&#039;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number8 index7 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;@parent&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number9 index8 alt2&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&nbsp;&lt;\/div&gt;\r\n&lt;div class=&quot;line number10 index9 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;a href=&lt;\/code&gt;&lt;code class=&quot;php string&quot;&gt;&quot;#&quot;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&gt;Section specific links&lt;\/a&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number11 index10 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@stop&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;h2&gt;Echo and escaping&lt;\/h2&gt;\r\n&lt;p&gt;One of my favourite features of template engines is that it allows you to very easily echo or escape variables into your views.&lt;\/p&gt;\r\n&lt;p&gt;So instead of writing:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_512263&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;h1&gt;Hello &lt;?php &lt;\/code&gt;&lt;code class=&quot;php functions&quot;&gt;echo&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$name&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;; ?&gt;!&lt;\/h1&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;You can simply write:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_424724&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;h1&gt;Hello {{ &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$name&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;}}&lt;\/h1&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;Whenever you are printing content that has been inputted by a user you should always escape it to prevent malicious injection. You can do this very easily in Laravel by simply using 3 curly brackets:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_925934&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;p&gt;{{{ &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$user_input&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;}}}&lt;\/p&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;h2&gt;Ifs&lt;\/h2&gt;\r\n&lt;p&gt;At some point in your application, you are more than likely going to have to include some logic If statements. This is unfortunate, but it can be made cleaner by using Blade&rsquo;s syntax:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_707431&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;6&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;7&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;if&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php functions&quot;&gt;count&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$friends&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;) === 1)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;You have one friend&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;elseif&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php functions&quot;&gt;count&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$friends&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;) &gt; 1)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;You have {{ &lt;\/code&gt;&lt;code class=&quot;php functions&quot;&gt;count&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$friends&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;) }} friends&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;else&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number6 index5 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;You don&#039;t have any friends&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number7 index6 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endif&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;Another useful bit of Blade logic is the unless block:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_89629&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@unless (Auth::check())&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;You are not signed in.&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@endunless&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;In this example I&rsquo;m simply checking to see if the user is logged in.&lt;\/p&gt;\r\n&lt;h2&gt;Loops&lt;\/h2&gt;\r\n&lt;p&gt;Loops are another common bit of logic that you might be required to implement in your view. This is usually the case when you need to iterate through an array of results to display each one:&lt;\/p&gt;\r\n&lt;p&gt;For:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_729738&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;for&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$i&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;= 1; &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$i&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;&lt; 100; &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$i&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;++)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;li&gt;{{ &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$i&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;}} ... &lt;\/li&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endfor&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;Foreach:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_496914&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;foreach&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$users&lt;\/code&gt; &lt;code class=&quot;php keyword&quot;&gt;as&lt;\/code&gt; &lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;li&gt;This is user {{ &lt;\/code&gt;&lt;code class=&quot;php variable&quot;&gt;$user&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;-&gt;name }}&lt;\/li&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endforeach&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;While:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_102219&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;while&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;(true)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;php spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;&lt;p&gt;I have no good reason to &lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;use&lt;\/code&gt; &lt;code class=&quot;php plain&quot;&gt;this.&lt;\/p&gt;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;endwhile&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;h2&gt;Includes&lt;\/h2&gt;\r\n&lt;p&gt;Finally, to include views in other views you can simply use the include tag:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_979551&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php plain&quot;&gt;@&lt;\/code&gt;&lt;code class=&quot;php keyword&quot;&gt;include&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;(&lt;\/code&gt;&lt;code class=&quot;php string&quot;&gt;&#039;view.name&#039;&lt;\/code&gt;&lt;code class=&quot;php plain&quot;&gt;)&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;This is useful if you want to use partials. So for example, you could save your navigation into a partial and simply include it into the template whenever you needed it.&lt;\/p&gt;\r\n&lt;h2&gt;Using other engines&lt;\/h2&gt;\r\n&lt;p&gt;Another popular template engine is &lt;a href=&quot;http:\/\/twig.sensiolabs.org\/&quot;&gt;Twig&lt;\/a&gt;. Using &lt;a href=&quot;https:\/\/github.com\/rcrowe\/TwigBridge&quot;&gt;this&lt;\/a&gt; Github repo, we can very easily install Twig through Composer.&lt;\/p&gt;\r\n&lt;p&gt;To install Twig, add the following to your &lt;code&gt;composer.json&lt;\/code&gt; file:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_125712&quot; class=&quot;syntaxhighlighter  jscript&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;2&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;3&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;4&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;5&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;jscript plain&quot;&gt;{&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number2 index1 alt1&quot;&gt;&lt;code class=&quot;jscript spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;jscript string&quot;&gt;&quot;require&quot;&lt;\/code&gt;&lt;code class=&quot;jscript plain&quot;&gt;: {&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number3 index2 alt2&quot;&gt;&lt;code class=&quot;jscript spaces&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;jscript string&quot;&gt;&quot;rcrowe\/twigbridge&quot;&lt;\/code&gt;&lt;code class=&quot;jscript plain&quot;&gt;: &lt;\/code&gt;&lt;code class=&quot;jscript string&quot;&gt;&quot;0.4.*&quot;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number4 index3 alt1&quot;&gt;&lt;code class=&quot;jscript spaces&quot;&gt;&nbsp;&nbsp;&lt;\/code&gt;&lt;code class=&quot;jscript plain&quot;&gt;}&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;div class=&quot;line number5 index4 alt2&quot;&gt;&lt;code class=&quot;jscript plain&quot;&gt;}&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;Next add the following to your providers array in &lt;code&gt;app\/config\/app.php&lt;\/code&gt;:&lt;\/p&gt;\r\n&lt;div&gt;\r\n&lt;div id=&quot;highlighter_224026&quot; class=&quot;syntaxhighlighter  php&quot;&gt;\r\n&lt;div class=&quot;toolbar&quot;&gt;&lt;a class=&quot;toolbar_item command_help help&quot; href=&quot;#&quot;&gt;?&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td class=&quot;gutter&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;1&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;td class=&quot;code&quot;&gt;\r\n&lt;div class=&quot;container&quot;&gt;\r\n&lt;div class=&quot;line number1 index0 alt2&quot;&gt;&lt;code class=&quot;php string&quot;&gt;&#039;TwigBridge\\TwigServiceProvider&#039;&lt;\/code&gt;&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;\/td&gt;\r\n&lt;\/tr&gt;\r\n&lt;\/tbody&gt;\r\n&lt;\/table&gt;\r\n&lt;\/div&gt;\r\n&lt;\/div&gt;\r\n&lt;p&gt;Now you have full access to the fantastic Twig template engine!&lt;\/p&gt;\r\n&lt;h2&gt;Conclusion&lt;\/h2&gt;\r\n&lt;p&gt;Whilst using a template engine won&rsquo;t solve all of your View logic problems, it will make any logic that you are required to include in your views a lot cleaner. Template engines also allow you to easily create layouts, extend them and include partials to prevent you repeating the same HTML in multiple files.&lt;\/p&gt;\r\n&lt;p&gt;Overall I think template engines are really good and definitely worth the little bit of extra time it will take to learn the syntax of a new one. If you happen to be working with a front end coder who isn&rsquo;t comfortable using PHP, the syntax is usually a lot easier to pick up.&lt;\/p&gt;\r\n&lt;p&gt;This has been a brief overview of using Blade in Laravel 4 and a quick introduction to each of the elements. However, to really see them in action, keep following a long with this series as I get into building the front end of Cribbb!&lt;\/p&gt;\r\n&lt;p&gt;This is a series of posts on building an entire Open Source application called &lt;a href=&quot;http:\/\/cribbb.com&quot;&gt;Cribbb&lt;\/a&gt;. All of the tutorials will be free to web, and all of the code is available on &lt;a href=&quot;https:\/\/github.com\/cribbb\/cribbb&quot;&gt;GitHub&lt;\/a&gt;.&lt;\/p&gt;\r\n&lt;p&gt;To view a full listing of the tutorials in this series, &lt;a href=&quot;http:\/\/culttt.com\/tag\/cribbb\/&quot;&gt;click here&lt;\/a&gt;.&lt;\/p&gt;\r\n&lt;\/div&gt;","5":"2015-01-04 11:47:56","6":"2015-01-04 11:47:56"},"duration":0.00184,"duration_str":"1.84ms","stmt_id":null},{"sql":"select `tag_id` from `post_tag` where `post_id` = '4'","params":{"0":"4"},"duration":0.00117,"duration_str":"1.17ms","stmt_id":null},{"sql":"select `category_id` from `post_category` where `post_id` = '4'","params":{"0":"4"},"duration":0.00045,"duration_str":"450\u03bcs","stmt_id":null},{"sql":"insert into `post_category` (`category_id`, `post_id`) values ('1', '4')","params":{"0":"1","1":"4"},"duration":0.00113,"duration_str":"1.13ms","stmt_id":null},{"sql":"select count(*) as aggregate from `posts` where `slug` = 'Using-Blade-in-Laravel-4'","params":{"0":"Using-Blade-in-Laravel-4"},"duration":0.00047,"duration_str":"470\u03bcs","stmt_id":null},{"sql":"update `posts` set `cover_image_url` = '\/img\/\/a8xJjp_Using-Blade-in-Laravel-4.jpg', `updated_at` = '2015-01-04 11:47:56' where `id` = '4'","params":{"0":"\/img\/\/a8xJjp_Using-Blade-in-Laravel-4.jpg","1":"2015-01-04 11:47:56","2":"4"},"duration":0.00117,"duration_str":"1.17ms","stmt_id":null}]},"swiftmailer_mails":{"count":0,"mails":[]},"request":{"format":"html","content_type":"text\/html; charset=UTF-8","status_text":"Found","status_code":"302","request_query":"[]","request_request":"array:10 [\n  \"_token\" => \"tgaNxIy2m2J0HE9ucOxuYa1S2LvR8NtVNEsThFhZ\"\n  \"user_id\" => \"3\"\n  \"slug\" => \"Using-Blade-in-Laravel-4\"\n  \"title\" => \"Using Blade in Laravel 4\"\n  \"description\" => \"When you think of Views in the Model-View-Controller pattern, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.\"\n  \"content\" => \"\"\"\n    <div class=\"post\">M\n    <p><img src=\"http:\/\/culttt.com\/wp-content\/uploads\/2013\/08\/Using-Blade-in-Laravel-4.jpg\" alt=\"Using Blade in Laravel 4\" \/><br \/> When you think of Views in the <a href=\"http:\/\/culttt.com\/2012\/11\/19\/what-is-mvc-model-view-controller\/\">Model-View-Controller pattern<\/a>, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.<\/p>M\n    <p>Despite the best of intentions, there is usually at least some logic code that will be required to be placed in the View. What&rsquo;s more, we usually also have to stitch our Views together using partials, and so we need to be able to include other files or extend a particular view without having to create an entirely new set of files.<\/p>M\n    <p>View template engines have become popular over the last couple of years and have been adopted by a wide array of languages and frameworks. Laravel ships with the Blade template engine, but you are of course free to switch it out for your desired tempting engine from the PHP community.<\/p>M\n    <p>In this tutorial I&rsquo;m going to introduce template engines, show you what Blade is capable of and show you how easy it is to switch to a different tempting engine if you so wish.<\/p>M\n    <h2>Why use a template engine?<\/h2>M\n    <p>So why would you want to use a template engine in the first place? If you are new to template engines, you might be thinking, what advantage could it possibly give you over raw PHP?<\/p>M\n    <p>Well the honest answer is not a lot really. Template engines are fantastic for reducing or simplifying the code that you write in your View.<\/p>M\n    <p>So instead of this:<\/p>M\n    <div>M\n    <div id=\"highlighter_386027\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;ul&gt;<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;?php <\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code> <code class=\"php plain\">: ?&gt;<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;&lt;?php <\/code><code class=\"php functions\">echo<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name; ?&gt;&lt;\/li&gt;<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;?php <\/code><code class=\"php keyword\">endforeach<\/code><code class=\"php plain\">; ?&gt;<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"php plain\">&lt;\/ul&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>You can simply write:<\/p>M\n    <div>M\n    <div id=\"highlighter_901419\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;ul&gt;<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@<\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;{{ <\/code><code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@<\/code><code class=\"php keyword\">endforeach<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"php plain\">&lt;\/ul&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>As you can see, this is a much cleaner syntax.<\/p>M\n    <p>However, this does raise a couple of valid concerns.<\/p>M\n    <p>Firstly it will require you to learn a new syntax for each template engine you wish to use. This is usually a hybrid of PHP and HTML.<\/p>M\n    <p>Secondly, support for syntax highlighting in your text editor of choice might be patchy which is only going to make things harder for you.<\/p>M\n    <p>And thirdly, using a template engine will add weight to your codebase as it must be converted into real code using the engine. Whilst this might only be a concern in certain circumstances, it is still something to think about.<\/p>M\n    <p>Template engines aren&rsquo;t a magic solution for separating your logic from your views. If you are questioning whether certain logic should be in the view, it&rsquo;s probably a sign that it shouldn&rsquo;t.<\/p>M\n    <p>With all that said, I still prefer to use tempting engines because PHP is ugly and it looks disgusting in HTML.<\/p>M\n    <p>So let&rsquo;s look at Blade!<\/p>M\n    <h2>Blade<\/h2>M\n    <p>The Blade engine basically allows you to do six things:<\/p>M\n    <ol>M\n    <li>Define sections<\/li>M\n    <li>Extend views<\/li>M\n    <li>Echo and escaping<\/li>M\n    <li>Ifs<\/li>M\n    <li>Loops<\/li>M\n    <li>Includes<\/li>M\n    <\/ol>M\n    <h2>Define sections<\/h2>M\n    <p>The first thing you are going to want to do is to create a layout file. This file contains your header and footer code and also your defined areas such <em>content<\/em> or <em>sidebar<\/em>.<\/p>M\n    <p>So create a file under <code>app\/views\/layouts<\/code> called <code>master.blade.php<\/code> and copy the following:<\/p>M\n    <div>M\n    <div id=\"highlighter_626713\" class=\"syntaxhighlighter  xml\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <div class=\"line number6 index5 alt1\">6<\/div>M\n    <div class=\"line number7 index6 alt2\">7<\/div>M\n    <div class=\"line number8 index7 alt1\">8<\/div>M\n    <div class=\"line number9 index8 alt2\">9<\/div>M\n    <div class=\"line number10 index9 alt1\">10<\/div>M\n    <div class=\"line number11 index10 alt2\">11<\/div>M\n    <div class=\"line number12 index11 alt1\">12<\/div>M\n    <div class=\"line number13 index12 alt2\">13<\/div>M\n    <div class=\"line number14 index13 alt1\">14<\/div>M\n    <div class=\"line number15 index14 alt2\">15<\/div>M\n    <div class=\"line number16 index15 alt1\">16<\/div>M\n    <div class=\"line number17 index16 alt2\">17<\/div>M\n    <div class=\"line number18 index17 alt1\">18<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">html<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">body<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">nav<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"navigation\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@section('navigation')<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">a<\/code> <code class=\"xml color1\">href<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"\/\"<\/code><code class=\"xml plain\">&gt;Home&lt;\/<\/code><code class=\"xml keyword\">a<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number6 index5 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">a<\/code> <code class=\"xml color1\">href<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"\/about\"<\/code><code class=\"xml plain\">&gt;About&lt;\/<\/code><code class=\"xml keyword\">a<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number7 index6 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@show<\/code><\/div>M\n    <div class=\"line number8 index7 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">nav<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number9 index8 alt2\">&nbsp;<\/div>M\n    <div class=\"line number10 index9 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">div<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"container\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number11 index10 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@yield('content')<\/code><\/div>M\n    <div class=\"line number12 index11 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">div<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number13 index12 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code>&nbsp;<\/div>M\n    <div class=\"line number14 index13 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">div<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"sidebar\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number15 index14 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@yield('sidebar')<\/code><\/div>M\n    <div class=\"line number16 index15 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">div<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number17 index16 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">body<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <div class=\"line number18 index17 alt1\"><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">html<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>This template has basically two different type of sections. First is the navigation section which contains the main links that will be on each page. If we needed to overwrite the navigation with page specific links, we could do that very easily with Blade.<\/p>M\n    <p>Second we have areas where we yield the content from a partial. So the content would appear in the content section and the sidebar would appear in the sidebar section.<\/p>M\n    <h2>Extend views<\/h2>M\n    <p>To extend a View you simply have to define that this is an extension and then overwrite or append to the sections that you have defined:<\/p>M\n    <div>M\n    <div id=\"highlighter_104603\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <div class=\"line number6 index5 alt1\">6<\/div>M\n    <div class=\"line number7 index6 alt2\">7<\/div>M\n    <div class=\"line number8 index7 alt1\">8<\/div>M\n    <div class=\"line number9 index8 alt2\">9<\/div>M\n    <div class=\"line number10 index9 alt1\">10<\/div>M\n    <div class=\"line number11 index10 alt2\">11<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">extends<\/code><code class=\"php plain\">(<\/code><code class=\"php string\">'layouts.master'<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\">&nbsp;<\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@section(<\/code><code class=\"php string\">'content'<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;p&gt;This will be overwritten&lt;\/p&gt;<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"php plain\">@stop<\/code><\/div>M\n    <div class=\"line number6 index5 alt1\">&nbsp;<\/div>M\n    <div class=\"line number7 index6 alt2\"><code class=\"php plain\">@section(<\/code><code class=\"php string\">'sidebar'<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <div class=\"line number8 index7 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@parent<\/code><\/div>M\n    <div class=\"line number9 index8 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code>&nbsp;<\/div>M\n    <div class=\"line number10 index9 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;a href=<\/code><code class=\"php string\">\"#\"<\/code><code class=\"php plain\">&gt;Section specific links&lt;\/a&gt;<\/code><\/div>M\n    <div class=\"line number11 index10 alt2\"><code class=\"php plain\">@stop<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <h2>Echo and escaping<\/h2>M\n    <p>One of my favourite features of template engines is that it allows you to very easily echo or escape variables into your views.<\/p>M\n    <p>So instead of writing:<\/p>M\n    <div>M\n    <div id=\"highlighter_512263\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;h1&gt;Hello &lt;?php <\/code><code class=\"php functions\">echo<\/code> <code class=\"php variable\">$name<\/code><code class=\"php plain\">; ?&gt;!&lt;\/h1&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>You can simply write:<\/p>M\n    <div>M\n    <div id=\"highlighter_424724\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;h1&gt;Hello {{ <\/code><code class=\"php variable\">$name<\/code> <code class=\"php plain\">}}&lt;\/h1&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>Whenever you are printing content that has been inputted by a user you should always escape it to prevent malicious injection. You can do this very easily in Laravel by simply using 3 curly brackets:<\/p>M\n    <div>M\n    <div id=\"highlighter_925934\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;p&gt;{{{ <\/code><code class=\"php variable\">$user_input<\/code> <code class=\"php plain\">}}}&lt;\/p&gt;<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <h2>Ifs<\/h2>M\n    <p>At some point in your application, you are more than likely going to have to include some logic If statements. This is unfortunate, but it can be made cleaner by using Blade&rsquo;s syntax:<\/p>M\n    <div>M\n    <div id=\"highlighter_707431\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <div class=\"line number6 index5 alt1\">6<\/div>M\n    <div class=\"line number7 index6 alt2\">7<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">if<\/code> <code class=\"php plain\">(<\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) === 1)<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You have one friend<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">elseif<\/code> <code class=\"php plain\">(<\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) &gt; 1)<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You have {{ <\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) }} friends<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">else<\/code><\/div>M\n    <div class=\"line number6 index5 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You don't have any friends<\/code><\/div>M\n    <div class=\"line number7 index6 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endif<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>Another useful bit of Blade logic is the unless block:<\/p>M\n    <div>M\n    <div id=\"highlighter_89629\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@unless (Auth::check())<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You are not signed in.<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@endunless<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>In this example I&rsquo;m simply checking to see if the user is logged in.<\/p>M\n    <h2>Loops<\/h2>M\n    <p>Loops are another common bit of logic that you might be required to implement in your view. This is usually the case when you need to iterate through an array of results to display each one:<\/p>M\n    <p>For:<\/p>M\n    <div>M\n    <div id=\"highlighter_729738\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">for<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">= 1; <\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">&lt; 100; <\/code><code class=\"php variable\">$i<\/code><code class=\"php plain\">++)<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;{{ <\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">}} ... &lt;\/li&gt;<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endfor<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>Foreach:<\/p>M\n    <div>M\n    <div id=\"highlighter_496914\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;This is user {{ <\/code><code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endforeach<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>While:<\/p>M\n    <div>M\n    <div id=\"highlighter_102219\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">while<\/code> <code class=\"php plain\">(true)<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;p&gt;I have no good reason to <\/code><code class=\"php keyword\">use<\/code> <code class=\"php plain\">this.&lt;\/p&gt;<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endwhile<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <h2>Includes<\/h2>M\n    <p>Finally, to include views in other views you can simply use the include tag:<\/p>M\n    <div>M\n    <div id=\"highlighter_979551\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">include<\/code><code class=\"php plain\">(<\/code><code class=\"php string\">'view.name'<\/code><code class=\"php plain\">)<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>This is useful if you want to use partials. So for example, you could save your navigation into a partial and simply include it into the template whenever you needed it.<\/p>M\n    <h2>Using other engines<\/h2>M\n    <p>Another popular template engine is <a href=\"http:\/\/twig.sensiolabs.org\/\">Twig<\/a>. Using <a href=\"https:\/\/github.com\/rcrowe\/TwigBridge\">this<\/a> Github repo, we can very easily install Twig through Composer.<\/p>M\n    <p>To install Twig, add the following to your <code>composer.json<\/code> file:<\/p>M\n    <div>M\n    <div id=\"highlighter_125712\" class=\"syntaxhighlighter  jscript\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <div class=\"line number2 index1 alt1\">2<\/div>M\n    <div class=\"line number3 index2 alt2\">3<\/div>M\n    <div class=\"line number4 index3 alt1\">4<\/div>M\n    <div class=\"line number5 index4 alt2\">5<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"jscript plain\">{<\/code><\/div>M\n    <div class=\"line number2 index1 alt1\"><code class=\"jscript spaces\">&nbsp;&nbsp;<\/code><code class=\"jscript string\">\"require\"<\/code><code class=\"jscript plain\">: {<\/code><\/div>M\n    <div class=\"line number3 index2 alt2\"><code class=\"jscript spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"jscript string\">\"rcrowe\/twigbridge\"<\/code><code class=\"jscript plain\">: <\/code><code class=\"jscript string\">\"0.4.*\"<\/code><\/div>M\n    <div class=\"line number4 index3 alt1\"><code class=\"jscript spaces\">&nbsp;&nbsp;<\/code><code class=\"jscript plain\">}<\/code><\/div>M\n    <div class=\"line number5 index4 alt2\"><code class=\"jscript plain\">}<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>Next add the following to your providers array in <code>app\/config\/app.php<\/code>:<\/p>M\n    <div>M\n    <div id=\"highlighter_224026\" class=\"syntaxhighlighter  php\">M\n    <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n    <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n    <tbody>M\n    <tr>M\n    <td class=\"gutter\">M\n    <div class=\"line number1 index0 alt2\">1<\/div>M\n    <\/td>M\n    <td class=\"code\">M\n    <div class=\"container\">M\n    <div class=\"line number1 index0 alt2\"><code class=\"php string\">'TwigBridge\\TwigServiceProvider'<\/code><\/div>M\n    <\/div>M\n    <\/td>M\n    <\/tr>M\n    <\/tbody>M\n    <\/table>M\n    <\/div>M\n    <\/div>M\n    <p>Now you have full access to the fantastic Twig template engine!<\/p>M\n    <h2>Conclusion<\/h2>M\n    <p>Whilst using a template engine won&rsquo;t solve all of your View logic problems, it will make any logic that you are required to include in your views a lot cleaner. Template engines also allow you to easily create layouts, extend them and include partials to prevent you repeating the same HTML in multiple files.<\/p>M\n    <p>Overall I think template engines are really good and definitely worth the little bit of extra time it will take to learn the syntax of a new one. If you happen to be working with a front end coder who isn&rsquo;t comfortable using PHP, the syntax is usually a lot easier to pick up.<\/p>M\n    <p>This has been a brief overview of using Blade in Laravel 4 and a quick introduction to each of the elements. However, to really see them in action, keep following a long with this series as I get into building the front end of Cribbb!<\/p>M\n    <p>This is a series of posts on building an entire Open Source application called <a href=\"http:\/\/cribbb.com\">Cribbb<\/a>. All of the tutorials will be free to web, and all of the code is available on <a href=\"https:\/\/github.com\/cribbb\/cribbb\">GitHub<\/a>.<\/p>M\n    <p>To view a full listing of the tutorials in this series, <a href=\"http:\/\/culttt.com\/tag\/cribbb\/\">click here<\/a>.<\/p>M\n    <\/div>\"\"\"\n  \"post_status_id\" => \"1\"\n  \"public_time\" => \"2015-01-04\"\n  \"post_category\" => array:1 [\n    0 => \"1\"\n  ]\n  \"post_tags\" => \"laravel, blade template\"\n]","request_headers":"array:12 [\n  \"content-type\" => array:1 [\n    0 => \"multipart\/form-data; boundary=----WebKitFormBoundaryW0QB1rdd0aZ1MaNx\"\n  ]\n  \"content-length\" => array:1 [\n    0 => \"66044\"\n  ]\n  \"host\" => array:1 [\n    0 => \"codeisfun.com\"\n  ]\n  \"connection\" => array:1 [\n    0 => \"keep-alive\"\n  ]\n  \"cache-control\" => array:1 [\n    0 => \"max-age=0\"\n  ]\n  \"accept\" => array:1 [\n    0 => \"text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/webp,*\/*;q=0.8\"\n  ]\n  \"origin\" => array:1 [\n    0 => \"http:\/\/codeisfun.com\"\n  ]\n  \"user-agent\" => array:1 [\n    0 => \"Mozilla\/5.0 (Windows NT 6.3; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/39.0.2171.95 Safari\/537.36\"\n  ]\n  \"referer\" => array:1 [\n    0 => \"http:\/\/codeisfun.com\/admin\/post\/create\"\n  ]\n  \"accept-encoding\" => array:1 [\n    0 => \"gzip, deflate\"\n  ]\n  \"accept-language\" => array:1 [\n    0 => \"en,vi;q=0.8,en-US;q=0.6\"\n  ]\n  \"cookie\" => array:1 [\n    0 => \"laravel_session=eyJpdiI6ImZ3VHRKbG40b05WTXhNcFM5NjUxeHc9PSIsInZhbHVlIjoiOWg1bFlLUVZYZWhOdUVDanhGMGpFVXdjSXNNQWo2MEhyaVcrWGsxcUx5MFZaTmN1WFAyNjhMZFdLZUNMcTRSUDUwZTRDdzJCcHVmbUs1dklXdWZmdlE9PSIsIm1hYyI6ImM2MzJlNzA2N2ZmNzBiNmRjMGU4NTEwYjkyYTNhZGU3YWY4YTM1YzNmMDQwZTVmYmJjYWNjYmQzMjQ1MmRlYWYifQ%3D%3D\"\n  ]\n]","request_server":"array:37 [\n  \"APP_ENV\" => \"local\"\n  \"USER\" => \"vagrant\"\n  \"HOME\" => \"\/home\/vagrant\"\n  \"FCGI_ROLE\" => \"RESPONDER\"\n  \"QUERY_STRING\" => \"\"\n  \"REQUEST_METHOD\" => \"POST\"\n  \"CONTENT_TYPE\" => \"multipart\/form-data; boundary=----WebKitFormBoundaryW0QB1rdd0aZ1MaNx\"\n  \"CONTENT_LENGTH\" => \"66044\"\n  \"SCRIPT_FILENAME\" => \"\/home\/vagrant\/code\/laravel\/public\/index.php\"\n  \"SCRIPT_NAME\" => \"\/index.php\"\n  \"REQUEST_URI\" => \"\/admin\/post\"\n  \"DOCUMENT_URI\" => \"\/index.php\"\n  \"DOCUMENT_ROOT\" => \"\/home\/vagrant\/code\/laravel\/public\"\n  \"SERVER_PROTOCOL\" => \"HTTP\/1.1\"\n  \"GATEWAY_INTERFACE\" => \"CGI\/1.1\"\n  \"SERVER_SOFTWARE\" => \"nginx\/1.6.2\"\n  \"REMOTE_ADDR\" => \"192.168.10.1\"\n  \"REMOTE_PORT\" => \"51842\"\n  \"SERVER_ADDR\" => \"192.168.10.10\"\n  \"SERVER_PORT\" => \"80\"\n  \"SERVER_NAME\" => \"codeisfun.com\"\n  \"REDIRECT_STATUS\" => \"200\"\n  \"HTTP_HOST\" => \"codeisfun.com\"\n  \"HTTP_CONNECTION\" => \"keep-alive\"\n  \"HTTP_CONTENT_LENGTH\" => \"66044\"\n  \"HTTP_CACHE_CONTROL\" => \"max-age=0\"\n  \"HTTP_ACCEPT\" => \"text\/html,application\/xhtml+xml,application\/xml;q=0.9,image\/webp,*\/*;q=0.8\"\n  \"HTTP_ORIGIN\" => \"http:\/\/codeisfun.com\"\n  \"HTTP_USER_AGENT\" => \"Mozilla\/5.0 (Windows NT 6.3; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/39.0.2171.95 Safari\/537.36\"\n  \"HTTP_CONTENT_TYPE\" => \"multipart\/form-data; boundary=----WebKitFormBoundaryW0QB1rdd0aZ1MaNx\"\n  \"HTTP_REFERER\" => \"http:\/\/codeisfun.com\/admin\/post\/create\"\n  \"HTTP_ACCEPT_ENCODING\" => \"gzip, deflate\"\n  \"HTTP_ACCEPT_LANGUAGE\" => \"en,vi;q=0.8,en-US;q=0.6\"\n  \"HTTP_COOKIE\" => \"laravel_session=eyJpdiI6ImZ3VHRKbG40b05WTXhNcFM5NjUxeHc9PSIsInZhbHVlIjoiOWg1bFlLUVZYZWhOdUVDanhGMGpFVXdjSXNNQWo2MEhyaVcrWGsxcUx5MFZaTmN1WFAyNjhMZFdLZUNMcTRSUDUwZTRDdzJCcHVmbUs1dklXdWZmdlE9PSIsIm1hYyI6ImM2MzJlNzA2N2ZmNzBiNmRjMGU4NTEwYjkyYTNhZGU3YWY4YTM1YzNmMDQwZTVmYmJjYWNjYmQzMjQ1MmRlYWYifQ%3D%3D\"\n  \"PHP_SELF\" => \"\/index.php\"\n  \"REQUEST_TIME_FLOAT\" => 1420346874.891\n  \"REQUEST_TIME\" => 1420346874\n]","request_cookies":"array:1 [\n  \"laravel_session\" => \"ffb657b56d7e893793f16f4693ac81dfa0ae86a1\"\n]","response_headers":"array:4 [\n  \"cache-control\" => array:1 [\n    0 => \"no-cache\"\n  ]\n  \"date\" => array:1 [\n    0 => \"Sun, 04 Jan 2015 04:47:56 GMT\"\n  ]\n  \"location\" => array:1 [\n    0 => \"http:\/\/codeisfun.com\/admin\/post\/4\"\n  ]\n  \"content-type\" => array:1 [\n    0 => \"text\/html; charset=UTF-8\"\n  ]\n]","path_info":"\/admin\/post","session_attributes":"array:6 [\n  \"_token\" => \"tgaNxIy2m2J0HE9ucOxuYa1S2LvR8NtVNEsThFhZ\"\n  \"PHPDEBUGBAR_STACK_DATA\" => []\n  \"flash\" => array:2 [\n    \"old\" => []\n    \"new\" => array:2 [\n      0 => \"_old_input\"\n      1 => \"message\"\n    ]\n  ]\n  \"login_82e5d2c56bdd0811318f0cf078b78bfc\" => 3\n  \"_old_input\" => array:10 [\n    \"_token\" => \"tgaNxIy2m2J0HE9ucOxuYa1S2LvR8NtVNEsThFhZ\"\n    \"user_id\" => \"3\"\n    \"slug\" => \"Using-Blade-in-Laravel-4\"\n    \"title\" => \"Using Blade in Laravel 4\"\n    \"description\" => \"When you think of Views in the Model-View-Controller pattern, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.\"\n    \"content\" => \"\"\"\n      <div class=\"post\">M\n      <p><img src=\"http:\/\/culttt.com\/wp-content\/uploads\/2013\/08\/Using-Blade-in-Laravel-4.jpg\" alt=\"Using Blade in Laravel 4\" \/><br \/> When you think of Views in the <a href=\"http:\/\/culttt.com\/2012\/11\/19\/what-is-mvc-model-view-controller\/\">Model-View-Controller pattern<\/a>, you often immediately think that the View will only ever be concerned with how the page is presented to the end user. Whilst this idealistic outlook works in theory, it is rarely the case when you actually begin creating an application.<\/p>M\n      <p>Despite the best of intentions, there is usually at least some logic code that will be required to be placed in the View. What&rsquo;s more, we usually also have to stitch our Views together using partials, and so we need to be able to include other files or extend a particular view without having to create an entirely new set of files.<\/p>M\n      <p>View template engines have become popular over the last couple of years and have been adopted by a wide array of languages and frameworks. Laravel ships with the Blade template engine, but you are of course free to switch it out for your desired tempting engine from the PHP community.<\/p>M\n      <p>In this tutorial I&rsquo;m going to introduce template engines, show you what Blade is capable of and show you how easy it is to switch to a different tempting engine if you so wish.<\/p>M\n      <h2>Why use a template engine?<\/h2>M\n      <p>So why would you want to use a template engine in the first place? If you are new to template engines, you might be thinking, what advantage could it possibly give you over raw PHP?<\/p>M\n      <p>Well the honest answer is not a lot really. Template engines are fantastic for reducing or simplifying the code that you write in your View.<\/p>M\n      <p>So instead of this:<\/p>M\n      <div>M\n      <div id=\"highlighter_386027\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;ul&gt;<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;?php <\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code> <code class=\"php plain\">: ?&gt;<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;&lt;?php <\/code><code class=\"php functions\">echo<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name; ?&gt;&lt;\/li&gt;<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;?php <\/code><code class=\"php keyword\">endforeach<\/code><code class=\"php plain\">; ?&gt;<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"php plain\">&lt;\/ul&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>You can simply write:<\/p>M\n      <div>M\n      <div id=\"highlighter_901419\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;ul&gt;<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@<\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;{{ <\/code><code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@<\/code><code class=\"php keyword\">endforeach<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"php plain\">&lt;\/ul&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>As you can see, this is a much cleaner syntax.<\/p>M\n      <p>However, this does raise a couple of valid concerns.<\/p>M\n      <p>Firstly it will require you to learn a new syntax for each template engine you wish to use. This is usually a hybrid of PHP and HTML.<\/p>M\n      <p>Secondly, support for syntax highlighting in your text editor of choice might be patchy which is only going to make things harder for you.<\/p>M\n      <p>And thirdly, using a template engine will add weight to your codebase as it must be converted into real code using the engine. Whilst this might only be a concern in certain circumstances, it is still something to think about.<\/p>M\n      <p>Template engines aren&rsquo;t a magic solution for separating your logic from your views. If you are questioning whether certain logic should be in the view, it&rsquo;s probably a sign that it shouldn&rsquo;t.<\/p>M\n      <p>With all that said, I still prefer to use tempting engines because PHP is ugly and it looks disgusting in HTML.<\/p>M\n      <p>So let&rsquo;s look at Blade!<\/p>M\n      <h2>Blade<\/h2>M\n      <p>The Blade engine basically allows you to do six things:<\/p>M\n      <ol>M\n      <li>Define sections<\/li>M\n      <li>Extend views<\/li>M\n      <li>Echo and escaping<\/li>M\n      <li>Ifs<\/li>M\n      <li>Loops<\/li>M\n      <li>Includes<\/li>M\n      <\/ol>M\n      <h2>Define sections<\/h2>M\n      <p>The first thing you are going to want to do is to create a layout file. This file contains your header and footer code and also your defined areas such <em>content<\/em> or <em>sidebar<\/em>.<\/p>M\n      <p>So create a file under <code>app\/views\/layouts<\/code> called <code>master.blade.php<\/code> and copy the following:<\/p>M\n      <div>M\n      <div id=\"highlighter_626713\" class=\"syntaxhighlighter  xml\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <div class=\"line number6 index5 alt1\">6<\/div>M\n      <div class=\"line number7 index6 alt2\">7<\/div>M\n      <div class=\"line number8 index7 alt1\">8<\/div>M\n      <div class=\"line number9 index8 alt2\">9<\/div>M\n      <div class=\"line number10 index9 alt1\">10<\/div>M\n      <div class=\"line number11 index10 alt2\">11<\/div>M\n      <div class=\"line number12 index11 alt1\">12<\/div>M\n      <div class=\"line number13 index12 alt2\">13<\/div>M\n      <div class=\"line number14 index13 alt1\">14<\/div>M\n      <div class=\"line number15 index14 alt2\">15<\/div>M\n      <div class=\"line number16 index15 alt1\">16<\/div>M\n      <div class=\"line number17 index16 alt2\">17<\/div>M\n      <div class=\"line number18 index17 alt1\">18<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">html<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">body<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">nav<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"navigation\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@section('navigation')<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">a<\/code> <code class=\"xml color1\">href<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"\/\"<\/code><code class=\"xml plain\">&gt;Home&lt;\/<\/code><code class=\"xml keyword\">a<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number6 index5 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">a<\/code> <code class=\"xml color1\">href<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"\/about\"<\/code><code class=\"xml plain\">&gt;About&lt;\/<\/code><code class=\"xml keyword\">a<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number7 index6 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@show<\/code><\/div>M\n      <div class=\"line number8 index7 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">nav<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number9 index8 alt2\">&nbsp;<\/div>M\n      <div class=\"line number10 index9 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">div<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"container\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number11 index10 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@yield('content')<\/code><\/div>M\n      <div class=\"line number12 index11 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">div<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number13 index12 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code>&nbsp;<\/div>M\n      <div class=\"line number14 index13 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;<\/code><code class=\"xml keyword\">div<\/code> <code class=\"xml color1\">class<\/code><code class=\"xml plain\">=<\/code><code class=\"xml string\">\"sidebar\"<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number15 index14 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">@yield('sidebar')<\/code><\/div>M\n      <div class=\"line number16 index15 alt1\"><code class=\"xml spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">div<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number17 index16 alt2\"><code class=\"xml spaces\">&nbsp;&nbsp;<\/code><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">body<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <div class=\"line number18 index17 alt1\"><code class=\"xml plain\">&lt;\/<\/code><code class=\"xml keyword\">html<\/code><code class=\"xml plain\">&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>This template has basically two different type of sections. First is the navigation section which contains the main links that will be on each page. If we needed to overwrite the navigation with page specific links, we could do that very easily with Blade.<\/p>M\n      <p>Second we have areas where we yield the content from a partial. So the content would appear in the content section and the sidebar would appear in the sidebar section.<\/p>M\n      <h2>Extend views<\/h2>M\n      <p>To extend a View you simply have to define that this is an extension and then overwrite or append to the sections that you have defined:<\/p>M\n      <div>M\n      <div id=\"highlighter_104603\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <div class=\"line number6 index5 alt1\">6<\/div>M\n      <div class=\"line number7 index6 alt2\">7<\/div>M\n      <div class=\"line number8 index7 alt1\">8<\/div>M\n      <div class=\"line number9 index8 alt2\">9<\/div>M\n      <div class=\"line number10 index9 alt1\">10<\/div>M\n      <div class=\"line number11 index10 alt2\">11<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">extends<\/code><code class=\"php plain\">(<\/code><code class=\"php string\">'layouts.master'<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\">&nbsp;<\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@section(<\/code><code class=\"php string\">'content'<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;p&gt;This will be overwritten&lt;\/p&gt;<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"php plain\">@stop<\/code><\/div>M\n      <div class=\"line number6 index5 alt1\">&nbsp;<\/div>M\n      <div class=\"line number7 index6 alt2\"><code class=\"php plain\">@section(<\/code><code class=\"php string\">'sidebar'<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <div class=\"line number8 index7 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">@parent<\/code><\/div>M\n      <div class=\"line number9 index8 alt2\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code>&nbsp;<\/div>M\n      <div class=\"line number10 index9 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;a href=<\/code><code class=\"php string\">\"#\"<\/code><code class=\"php plain\">&gt;Section specific links&lt;\/a&gt;<\/code><\/div>M\n      <div class=\"line number11 index10 alt2\"><code class=\"php plain\">@stop<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <h2>Echo and escaping<\/h2>M\n      <p>One of my favourite features of template engines is that it allows you to very easily echo or escape variables into your views.<\/p>M\n      <p>So instead of writing:<\/p>M\n      <div>M\n      <div id=\"highlighter_512263\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;h1&gt;Hello &lt;?php <\/code><code class=\"php functions\">echo<\/code> <code class=\"php variable\">$name<\/code><code class=\"php plain\">; ?&gt;!&lt;\/h1&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>You can simply write:<\/p>M\n      <div>M\n      <div id=\"highlighter_424724\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;h1&gt;Hello {{ <\/code><code class=\"php variable\">$name<\/code> <code class=\"php plain\">}}&lt;\/h1&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>Whenever you are printing content that has been inputted by a user you should always escape it to prevent malicious injection. You can do this very easily in Laravel by simply using 3 curly brackets:<\/p>M\n      <div>M\n      <div id=\"highlighter_925934\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">&lt;p&gt;{{{ <\/code><code class=\"php variable\">$user_input<\/code> <code class=\"php plain\">}}}&lt;\/p&gt;<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <h2>Ifs<\/h2>M\n      <p>At some point in your application, you are more than likely going to have to include some logic If statements. This is unfortunate, but it can be made cleaner by using Blade&rsquo;s syntax:<\/p>M\n      <div>M\n      <div id=\"highlighter_707431\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <div class=\"line number6 index5 alt1\">6<\/div>M\n      <div class=\"line number7 index6 alt2\">7<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">if<\/code> <code class=\"php plain\">(<\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) === 1)<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You have one friend<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">elseif<\/code> <code class=\"php plain\">(<\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) &gt; 1)<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You have {{ <\/code><code class=\"php functions\">count<\/code><code class=\"php plain\">(<\/code><code class=\"php variable\">$friends<\/code><code class=\"php plain\">) }} friends<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">else<\/code><\/div>M\n      <div class=\"line number6 index5 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You don't have any friends<\/code><\/div>M\n      <div class=\"line number7 index6 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endif<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>Another useful bit of Blade logic is the unless block:<\/p>M\n      <div>M\n      <div id=\"highlighter_89629\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@unless (Auth::check())<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">You are not signed in.<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@endunless<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>In this example I&rsquo;m simply checking to see if the user is logged in.<\/p>M\n      <h2>Loops<\/h2>M\n      <p>Loops are another common bit of logic that you might be required to implement in your view. This is usually the case when you need to iterate through an array of results to display each one:<\/p>M\n      <p>For:<\/p>M\n      <div>M\n      <div id=\"highlighter_729738\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">for<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">= 1; <\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">&lt; 100; <\/code><code class=\"php variable\">$i<\/code><code class=\"php plain\">++)<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;{{ <\/code><code class=\"php variable\">$i<\/code> <code class=\"php plain\">}} ... &lt;\/li&gt;<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endfor<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>Foreach:<\/p>M\n      <div>M\n      <div id=\"highlighter_496914\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">foreach<\/code> <code class=\"php plain\">(<\/code><code class=\"php variable\">$users<\/code> <code class=\"php keyword\">as<\/code> <code class=\"php variable\">$user<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;li&gt;This is user {{ <\/code><code class=\"php variable\">$user<\/code><code class=\"php plain\">-&gt;name }}&lt;\/li&gt;<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endforeach<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>While:<\/p>M\n      <div>M\n      <div id=\"highlighter_102219\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">while<\/code> <code class=\"php plain\">(true)<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"php spaces\">&nbsp;&nbsp;<\/code><code class=\"php plain\">&lt;p&gt;I have no good reason to <\/code><code class=\"php keyword\">use<\/code> <code class=\"php plain\">this.&lt;\/p&gt;<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">endwhile<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <h2>Includes<\/h2>M\n      <p>Finally, to include views in other views you can simply use the include tag:<\/p>M\n      <div>M\n      <div id=\"highlighter_979551\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php plain\">@<\/code><code class=\"php keyword\">include<\/code><code class=\"php plain\">(<\/code><code class=\"php string\">'view.name'<\/code><code class=\"php plain\">)<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>This is useful if you want to use partials. So for example, you could save your navigation into a partial and simply include it into the template whenever you needed it.<\/p>M\n      <h2>Using other engines<\/h2>M\n      <p>Another popular template engine is <a href=\"http:\/\/twig.sensiolabs.org\/\">Twig<\/a>. Using <a href=\"https:\/\/github.com\/rcrowe\/TwigBridge\">this<\/a> Github repo, we can very easily install Twig through Composer.<\/p>M\n      <p>To install Twig, add the following to your <code>composer.json<\/code> file:<\/p>M\n      <div>M\n      <div id=\"highlighter_125712\" class=\"syntaxhighlighter  jscript\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <div class=\"line number2 index1 alt1\">2<\/div>M\n      <div class=\"line number3 index2 alt2\">3<\/div>M\n      <div class=\"line number4 index3 alt1\">4<\/div>M\n      <div class=\"line number5 index4 alt2\">5<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"jscript plain\">{<\/code><\/div>M\n      <div class=\"line number2 index1 alt1\"><code class=\"jscript spaces\">&nbsp;&nbsp;<\/code><code class=\"jscript string\">\"require\"<\/code><code class=\"jscript plain\">: {<\/code><\/div>M\n      <div class=\"line number3 index2 alt2\"><code class=\"jscript spaces\">&nbsp;&nbsp;&nbsp;&nbsp;<\/code><code class=\"jscript string\">\"rcrowe\/twigbridge\"<\/code><code class=\"jscript plain\">: <\/code><code class=\"jscript string\">\"0.4.*\"<\/code><\/div>M\n      <div class=\"line number4 index3 alt1\"><code class=\"jscript spaces\">&nbsp;&nbsp;<\/code><code class=\"jscript plain\">}<\/code><\/div>M\n      <div class=\"line number5 index4 alt2\"><code class=\"jscript plain\">}<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>Next add the following to your providers array in <code>app\/config\/app.php<\/code>:<\/p>M\n      <div>M\n      <div id=\"highlighter_224026\" class=\"syntaxhighlighter  php\">M\n      <div class=\"toolbar\"><a class=\"toolbar_item command_help help\" href=\"#\">?<\/a><\/div>M\n      <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">M\n      <tbody>M\n      <tr>M\n      <td class=\"gutter\">M\n      <div class=\"line number1 index0 alt2\">1<\/div>M\n      <\/td>M\n      <td class=\"code\">M\n      <div class=\"container\">M\n      <div class=\"line number1 index0 alt2\"><code class=\"php string\">'TwigBridge\\TwigServiceProvider'<\/code><\/div>M\n      <\/div>M\n      <\/td>M\n      <\/tr>M\n      <\/tbody>M\n      <\/table>M\n      <\/div>M\n      <\/div>M\n      <p>Now you have full access to the fantastic Twig template engine!<\/p>M\n      <h2>Conclusion<\/h2>M\n      <p>Whilst using a template engine won&rsquo;t solve all of your View logic problems, it will make any logic that you are required to include in your views a lot cleaner. Template engines also allow you to easily create layouts, extend them and include partials to prevent you repeating the same HTML in multiple files.<\/p>M\n      <p>Overall I think template engines are really good and definitely worth the little bit of extra time it will take to learn the syntax of a new one. If you happen to be working with a front end coder who isn&rsquo;t comfortable using PHP, the syntax is usually a lot easier to pick up.<\/p>M\n      <p>This has been a brief overview of using Blade in Laravel 4 and a quick introduction to each of the elements. However, to really see them in action, keep following a long with this series as I get into building the front end of Cribbb!<\/p>M\n      <p>This is a series of posts on building an entire Open Source application called <a href=\"http:\/\/cribbb.com\">Cribbb<\/a>. All of the tutorials will be free to web, and all of the code is available on <a href=\"https:\/\/github.com\/cribbb\/cribbb\">GitHub<\/a>.<\/p>M\n      <p>To view a full listing of the tutorials in this series, <a href=\"http:\/\/culttt.com\/tag\/cribbb\/\">click here<\/a>.<\/p>M\n      <\/div>\"\"\"\n    \"post_status_id\" => \"1\"\n    \"public_time\" => \"2015-01-04\"\n    \"post_category\" => array:1 [\n      0 => \"1\"\n    ]\n    \"post_tags\" => \"laravel, blade template\"\n  ]\n  \"message\" => \"b\u00e0i vi\u1ebft \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o th\u00e0nh c\u00f4ng!\"\n]"}}